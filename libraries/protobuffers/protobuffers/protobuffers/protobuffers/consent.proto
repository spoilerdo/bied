syntax = "proto3";
option csharp_namespace = "ConsentGRPC";

package Consent;

import "datasource.proto";

service Consent_Service {
  rpc GetConsents (UserIdRequest) returns (Consents) {
    option (google.api.http).get = "/consent";
  };
  rpc GetConsent (ConsentIdRequest) returns (Consent) {
    option (google.api.http).get = "/consent/{id}";
  };
  rpc CreateConsent (ConsentRequest) returns (Consent) {
    option (google.api.http) = {
      post: "/consent"
      body: "*" 
    };
  };
  rpc DeleteAllConsent (UserIdRequest) returns (ConsentEmptyResponse) {
    option (google.api.http).delete = "/consent/all";
  };
  rpc DeleteConsent (ConsentIdRequest) returns (ConsentEmptyResponse) {
    option (google.api.http).delete = "/consent/{id}";
  };
  rpc EditConsent (ConsentEditRequest) returns (Consent) {
    option (google.api.http) = {
      put: "/consent"
      body: "*"
    };
  };
}

message Consents {
  repeated Consent consents = 1;
}

message UserIdRequest {
  string id = 1;
}

message ConsentRequest {
  string userId = 1;
  string datasourceId = 2;
  bool consent = 3;
  int64 uts = 4;
}

message ConsentIdRequest {
  string consentId = 1;
}

message ConsentEditRequest {
    string id = 1;
    string userId = 2;
    string datasourceId = 3;
    bool consent = 4;
    int64 uts = 5;
}

message ConsentEmptyResponse {}

message Consent {
  string id = 1;
  string userId = 2;
  Datasource datasource = 3;
  bool consent = 4;
  int64 uts = 5;
}
