// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: research.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from research.proto</summary>
public static partial class ResearchReflection {

  #region Descriptor
  /// <summary>File descriptor for research.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ResearchReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5yZXNlYXJjaC5wcm90bxoQZGF0YXNvdXJjZS5wcm90byIrCgpSZXNlYXJj",
          "aGVzEh0KCnJlc2VhcmNoZXMYASADKAsyCS5SZXNlYXJjaCIfChFSZXNlYXJj",
          "aElkUmVxdWVzdBIKCgJpZBgBIAEoCSIWChRHZXRSZXNlYXJjaGVzUmVxdWVz",
          "dCKRAQoVUmVzZWFyY2hDcmVhdGVSZXF1ZXN0EgwKBG5hbWUYASABKAkSEwoL",
          "ZGVzY3JpcHRpb24YAiABKAkSEAoIaW1hZ2VVcmwYAyABKAkSEQoJc3RhcnRE",
          "YXRlGAQgASgDEg8KB2VuZERhdGUYBSABKAMSDgoGYWN0aXZlGAYgASgIEg8K",
          "B293bmVySWQYByABKAkimwEKE1Jlc2VhcmNoRWRpdFJlcXVlc3QSCgoCaWQY",
          "ASABKAkSDAoEbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIQCghp",
          "bWFnZVVybBgEIAEoCRIRCglzdGFydERhdGUYBSABKAMSDwoHZW5kRGF0ZRgG",
          "IAEoAxIOCgZhY3RpdmUYByABKAgSDwoHb3duZXJJZBgIIAEoCSIXChVSZXNl",
          "YXJjaEVtcHR5UmVzcG9uc2UiKQobRGF0YXNvdXJjZUlkUmVzZWFyY2hSZXF1",
          "ZXN0EgoKAmlkGAEgASgJIh4KDUVtYWlsUmVxdWVzdHMSDQoFZW1haWwYASAD",
          "KAkiFAoSRW1haWxFbXB0eVJlc3BvbnNlIrIBCghSZXNlYXJjaBIKCgJpZBgB",
          "IAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEhAKCGlt",
          "YWdlVXJsGAQgASgJEhEKCXN0YXJ0RGF0ZRgFIAEoAxIPCgdlbmREYXRlGAYg",
          "ASgDEg4KBmFjdGl2ZRgHIAEoCBIPCgdvd25lcklkGAggASgJEiAKC2RhdGFz",
          "b3VyY2VzGAkgAygLMgsuRGF0YXNvdXJjZTLKAwoPUmVzZWFyY2hTZXJ2aWNl",
          "EjMKDUdldFJlc2VhcmNoZXMSFS5HZXRSZXNlYXJjaGVzUmVxdWVzdBoLLlJl",
          "c2VhcmNoZXMSLAoLR2V0UmVzZWFyY2gSEi5SZXNlYXJjaElkUmVxdWVzdBoJ",
          "LlJlc2VhcmNoEjMKDkNyZWF0ZVJlc2VhcmNoEhYuUmVzZWFyY2hDcmVhdGVS",
          "ZXF1ZXN0GgkuUmVzZWFyY2gSLwoMRWRpdFJlc2VhcmNoEhQuUmVzZWFyY2hF",
          "ZGl0UmVxdWVzdBoJLlJlc2VhcmNoEjwKDkRlbGV0ZVJlc2VhcmNoEhIuUmVz",
          "ZWFyY2hJZFJlcXVlc3QaFi5SZXNlYXJjaEVtcHR5UmVzcG9uc2USMQoXQWRk",
          "RGF0YXNvdXJjZVRvUmVzZWFyY2gSCy5EYXRhc291cmNlGgkuUmVzZWFyY2gS",
          "PwocUmVtb3ZlRGF0YXNvdXJjZUZyb21SZXNlYXJjaBIULkRhdGFzb3VyY2VJ",
          "ZFJlcXVlc3QaCS5SZXNlYXJjaBI8ChVJbnZpdGVVc2Vyc1RvUmVzZWFyY2gS",
          "Di5FbWFpbFJlcXVlc3RzGhMuRW1haWxFbXB0eVJlc3BvbnNlYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::DatasourceReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Researches), global::Researches.Parser, new[]{ "Researches_" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResearchIdRequest), global::ResearchIdRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetResearchesRequest), global::GetResearchesRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResearchCreateRequest), global::ResearchCreateRequest.Parser, new[]{ "Name", "Description", "ImageUrl", "StartDate", "EndDate", "Active", "OwnerId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResearchEditRequest), global::ResearchEditRequest.Parser, new[]{ "Id", "Name", "Description", "ImageUrl", "StartDate", "EndDate", "Active", "OwnerId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResearchEmptyResponse), global::ResearchEmptyResponse.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatasourceIdResearchRequest), global::DatasourceIdResearchRequest.Parser, new[]{ "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EmailRequests), global::EmailRequests.Parser, new[]{ "Email" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EmailEmptyResponse), global::EmailEmptyResponse.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Research), global::Research.Parser, new[]{ "Id", "Name", "Description", "ImageUrl", "StartDate", "EndDate", "Active", "OwnerId", "Datasources" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Researches : pb::IMessage<Researches> {
  private static readonly pb::MessageParser<Researches> _parser = new pb::MessageParser<Researches>(() => new Researches());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Researches> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Researches() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Researches(Researches other) : this() {
    researches_ = other.researches_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Researches Clone() {
    return new Researches(this);
  }

  /// <summary>Field number for the "researches" field.</summary>
  public const int Researches_FieldNumber = 1;
  private static readonly pb::FieldCodec<global::Research> _repeated_researches_codec
      = pb::FieldCodec.ForMessage(10, global::Research.Parser);
  private readonly pbc::RepeatedField<global::Research> researches_ = new pbc::RepeatedField<global::Research>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Research> Researches_ {
    get { return researches_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Researches);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Researches other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!researches_.Equals(other.researches_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= researches_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    researches_.WriteTo(output, _repeated_researches_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += researches_.CalculateSize(_repeated_researches_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Researches other) {
    if (other == null) {
      return;
    }
    researches_.Add(other.researches_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          researches_.AddEntriesFrom(input, _repeated_researches_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ResearchIdRequest : pb::IMessage<ResearchIdRequest> {
  private static readonly pb::MessageParser<ResearchIdRequest> _parser = new pb::MessageParser<ResearchIdRequest>(() => new ResearchIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResearchIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchIdRequest(ResearchIdRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchIdRequest Clone() {
    return new ResearchIdRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResearchIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResearchIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResearchIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GetResearchesRequest : pb::IMessage<GetResearchesRequest> {
  private static readonly pb::MessageParser<GetResearchesRequest> _parser = new pb::MessageParser<GetResearchesRequest>(() => new GetResearchesRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetResearchesRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetResearchesRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetResearchesRequest(GetResearchesRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetResearchesRequest Clone() {
    return new GetResearchesRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetResearchesRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetResearchesRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetResearchesRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class ResearchCreateRequest : pb::IMessage<ResearchCreateRequest> {
  private static readonly pb::MessageParser<ResearchCreateRequest> _parser = new pb::MessageParser<ResearchCreateRequest>(() => new ResearchCreateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResearchCreateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchCreateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchCreateRequest(ResearchCreateRequest other) : this() {
    name_ = other.name_;
    description_ = other.description_;
    imageUrl_ = other.imageUrl_;
    startDate_ = other.startDate_;
    endDate_ = other.endDate_;
    active_ = other.active_;
    ownerId_ = other.ownerId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchCreateRequest Clone() {
    return new ResearchCreateRequest(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 2;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 3;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "startDate" field.</summary>
  public const int StartDateFieldNumber = 4;
  private long startDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long StartDate {
    get { return startDate_; }
    set {
      startDate_ = value;
    }
  }

  /// <summary>Field number for the "endDate" field.</summary>
  public const int EndDateFieldNumber = 5;
  private long endDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndDate {
    get { return endDate_; }
    set {
      endDate_ = value;
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 6;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "ownerId" field.</summary>
  public const int OwnerIdFieldNumber = 7;
  private string ownerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OwnerId {
    get { return ownerId_; }
    set {
      ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResearchCreateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResearchCreateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Description != other.Description) return false;
    if (ImageUrl != other.ImageUrl) return false;
    if (StartDate != other.StartDate) return false;
    if (EndDate != other.EndDate) return false;
    if (Active != other.Active) return false;
    if (OwnerId != other.OwnerId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (StartDate != 0L) hash ^= StartDate.GetHashCode();
    if (EndDate != 0L) hash ^= EndDate.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Description);
    }
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ImageUrl);
    }
    if (StartDate != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(StartDate);
    }
    if (EndDate != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(EndDate);
    }
    if (Active != false) {
      output.WriteRawTag(48);
      output.WriteBool(Active);
    }
    if (OwnerId.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(OwnerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (StartDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartDate);
    }
    if (EndDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndDate);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (OwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResearchCreateRequest other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.StartDate != 0L) {
      StartDate = other.StartDate;
    }
    if (other.EndDate != 0L) {
      EndDate = other.EndDate;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.OwnerId.Length != 0) {
      OwnerId = other.OwnerId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Description = input.ReadString();
          break;
        }
        case 26: {
          ImageUrl = input.ReadString();
          break;
        }
        case 32: {
          StartDate = input.ReadInt64();
          break;
        }
        case 40: {
          EndDate = input.ReadInt64();
          break;
        }
        case 48: {
          Active = input.ReadBool();
          break;
        }
        case 58: {
          OwnerId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ResearchEditRequest : pb::IMessage<ResearchEditRequest> {
  private static readonly pb::MessageParser<ResearchEditRequest> _parser = new pb::MessageParser<ResearchEditRequest>(() => new ResearchEditRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResearchEditRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEditRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEditRequest(ResearchEditRequest other) : this() {
    id_ = other.id_;
    name_ = other.name_;
    description_ = other.description_;
    imageUrl_ = other.imageUrl_;
    startDate_ = other.startDate_;
    endDate_ = other.endDate_;
    active_ = other.active_;
    ownerId_ = other.ownerId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEditRequest Clone() {
    return new ResearchEditRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 3;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 4;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "startDate" field.</summary>
  public const int StartDateFieldNumber = 5;
  private long startDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long StartDate {
    get { return startDate_; }
    set {
      startDate_ = value;
    }
  }

  /// <summary>Field number for the "endDate" field.</summary>
  public const int EndDateFieldNumber = 6;
  private long endDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndDate {
    get { return endDate_; }
    set {
      endDate_ = value;
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 7;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "ownerId" field.</summary>
  public const int OwnerIdFieldNumber = 8;
  private string ownerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OwnerId {
    get { return ownerId_; }
    set {
      ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResearchEditRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResearchEditRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Name != other.Name) return false;
    if (Description != other.Description) return false;
    if (ImageUrl != other.ImageUrl) return false;
    if (StartDate != other.StartDate) return false;
    if (EndDate != other.EndDate) return false;
    if (Active != other.Active) return false;
    if (OwnerId != other.OwnerId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (StartDate != 0L) hash ^= StartDate.GetHashCode();
    if (EndDate != 0L) hash ^= EndDate.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Description);
    }
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ImageUrl);
    }
    if (StartDate != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(StartDate);
    }
    if (EndDate != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(EndDate);
    }
    if (Active != false) {
      output.WriteRawTag(56);
      output.WriteBool(Active);
    }
    if (OwnerId.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(OwnerId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (StartDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartDate);
    }
    if (EndDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndDate);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (OwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResearchEditRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.StartDate != 0L) {
      StartDate = other.StartDate;
    }
    if (other.EndDate != 0L) {
      EndDate = other.EndDate;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.OwnerId.Length != 0) {
      OwnerId = other.OwnerId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Description = input.ReadString();
          break;
        }
        case 34: {
          ImageUrl = input.ReadString();
          break;
        }
        case 40: {
          StartDate = input.ReadInt64();
          break;
        }
        case 48: {
          EndDate = input.ReadInt64();
          break;
        }
        case 56: {
          Active = input.ReadBool();
          break;
        }
        case 66: {
          OwnerId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ResearchEmptyResponse : pb::IMessage<ResearchEmptyResponse> {
  private static readonly pb::MessageParser<ResearchEmptyResponse> _parser = new pb::MessageParser<ResearchEmptyResponse>(() => new ResearchEmptyResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResearchEmptyResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEmptyResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEmptyResponse(ResearchEmptyResponse other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResearchEmptyResponse Clone() {
    return new ResearchEmptyResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResearchEmptyResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResearchEmptyResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResearchEmptyResponse other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class DatasourceIdResearchRequest : pb::IMessage<DatasourceIdResearchRequest> {
  private static readonly pb::MessageParser<DatasourceIdResearchRequest> _parser = new pb::MessageParser<DatasourceIdResearchRequest>(() => new DatasourceIdResearchRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatasourceIdResearchRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasourceIdResearchRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasourceIdResearchRequest(DatasourceIdResearchRequest other) : this() {
    id_ = other.id_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasourceIdResearchRequest Clone() {
    return new DatasourceIdResearchRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatasourceIdResearchRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatasourceIdResearchRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatasourceIdResearchRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class EmailRequests : pb::IMessage<EmailRequests> {
  private static readonly pb::MessageParser<EmailRequests> _parser = new pb::MessageParser<EmailRequests>(() => new EmailRequests());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EmailRequests> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailRequests() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailRequests(EmailRequests other) : this() {
    email_ = other.email_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailRequests Clone() {
    return new EmailRequests(this);
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_email_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> email_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Email {
    get { return email_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EmailRequests);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EmailRequests other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!email_.Equals(other.email_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= email_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    email_.WriteTo(output, _repeated_email_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += email_.CalculateSize(_repeated_email_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EmailRequests other) {
    if (other == null) {
      return;
    }
    email_.Add(other.email_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          email_.AddEntriesFrom(input, _repeated_email_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EmailEmptyResponse : pb::IMessage<EmailEmptyResponse> {
  private static readonly pb::MessageParser<EmailEmptyResponse> _parser = new pb::MessageParser<EmailEmptyResponse>(() => new EmailEmptyResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EmailEmptyResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailEmptyResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailEmptyResponse(EmailEmptyResponse other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmailEmptyResponse Clone() {
    return new EmailEmptyResponse(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EmailEmptyResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EmailEmptyResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EmailEmptyResponse other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class Research : pb::IMessage<Research> {
  private static readonly pb::MessageParser<Research> _parser = new pb::MessageParser<Research>(() => new Research());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Research> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ResearchReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Research() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Research(Research other) : this() {
    id_ = other.id_;
    name_ = other.name_;
    description_ = other.description_;
    imageUrl_ = other.imageUrl_;
    startDate_ = other.startDate_;
    endDate_ = other.endDate_;
    active_ = other.active_;
    ownerId_ = other.ownerId_;
    datasources_ = other.datasources_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Research Clone() {
    return new Research(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "description" field.</summary>
  public const int DescriptionFieldNumber = 3;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "imageUrl" field.</summary>
  public const int ImageUrlFieldNumber = 4;
  private string imageUrl_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ImageUrl {
    get { return imageUrl_; }
    set {
      imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "startDate" field.</summary>
  public const int StartDateFieldNumber = 5;
  private long startDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long StartDate {
    get { return startDate_; }
    set {
      startDate_ = value;
    }
  }

  /// <summary>Field number for the "endDate" field.</summary>
  public const int EndDateFieldNumber = 6;
  private long endDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long EndDate {
    get { return endDate_; }
    set {
      endDate_ = value;
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 7;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "ownerId" field.</summary>
  public const int OwnerIdFieldNumber = 8;
  private string ownerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OwnerId {
    get { return ownerId_; }
    set {
      ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "datasources" field.</summary>
  public const int DatasourcesFieldNumber = 9;
  private static readonly pb::FieldCodec<global::Datasource> _repeated_datasources_codec
      = pb::FieldCodec.ForMessage(74, global::Datasource.Parser);
  private readonly pbc::RepeatedField<global::Datasource> datasources_ = new pbc::RepeatedField<global::Datasource>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Datasource> Datasources {
    get { return datasources_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Research);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Research other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Name != other.Name) return false;
    if (Description != other.Description) return false;
    if (ImageUrl != other.ImageUrl) return false;
    if (StartDate != other.StartDate) return false;
    if (EndDate != other.EndDate) return false;
    if (Active != other.Active) return false;
    if (OwnerId != other.OwnerId) return false;
    if(!datasources_.Equals(other.datasources_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
    if (StartDate != 0L) hash ^= StartDate.GetHashCode();
    if (EndDate != 0L) hash ^= EndDate.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
    hash ^= datasources_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Description);
    }
    if (ImageUrl.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ImageUrl);
    }
    if (StartDate != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(StartDate);
    }
    if (EndDate != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(EndDate);
    }
    if (Active != false) {
      output.WriteRawTag(56);
      output.WriteBool(Active);
    }
    if (OwnerId.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(OwnerId);
    }
    datasources_.WriteTo(output, _repeated_datasources_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (ImageUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
    }
    if (StartDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartDate);
    }
    if (EndDate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndDate);
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (OwnerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
    }
    size += datasources_.CalculateSize(_repeated_datasources_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Research other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.ImageUrl.Length != 0) {
      ImageUrl = other.ImageUrl;
    }
    if (other.StartDate != 0L) {
      StartDate = other.StartDate;
    }
    if (other.EndDate != 0L) {
      EndDate = other.EndDate;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.OwnerId.Length != 0) {
      OwnerId = other.OwnerId;
    }
    datasources_.Add(other.datasources_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Description = input.ReadString();
          break;
        }
        case 34: {
          ImageUrl = input.ReadString();
          break;
        }
        case 40: {
          StartDate = input.ReadInt64();
          break;
        }
        case 48: {
          EndDate = input.ReadInt64();
          break;
        }
        case 56: {
          Active = input.ReadBool();
          break;
        }
        case 66: {
          OwnerId = input.ReadString();
          break;
        }
        case 74: {
          datasources_.AddEntriesFrom(input, _repeated_datasources_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
